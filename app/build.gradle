apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    showInjectParamInfos()
  
    defaultConfig {
        applicationId "com.example.bcompat"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        flavorDimensions "1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    lintOptions {
        abortOnError false
    }
    
     productFlavors{
        xiaomi{ }
        google{}
        wandoujia{}
        baidu{}
        anzhi{}
        QQ{}
    }
  
    //自定义打包时apk名字
    //android.applicationVariants.all { variant ->
    //	variant.outputs.all { output ->
        //	def fileName
            //if (outputFileName != null && outputFileName.contains('.apk')) {
                //if (variant.buildType.name.equals('release')) {
                    //输出示例：  yilv-huawei-release.apk
                //	fileName = "yilv-${variant.productFlavors[0].name}-${defaultConfig.versionName}-relese.apk"
        //		} else if (variant.buildType.name.equals('debug')) {
                    fileName = "yilv-${variant.productFlavors[0].name}-${defaultConfig.versionName}-debug.apk"
    //			}
        //		outputFileName = fileName
    //		}
    //	}
    //}

      //输出渠道包的名字，例如 xx.apk（个人还木有完全理解这块为什么这么写？？）
    android.applicationVariants.all{ variant ->
        variant.outputs.all{ output ->
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith(".apk")){
                //自定义想要生成的apk格式
                def fileName = "${variant.productFlavors[0].name}_${publishTime()}" + ".apk"
                outputFileName = fileName
            } 
        } 
    }
    //批量处理
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CLM_CHANNEL: name]
    }

        
}

def showInjectParamInfos(){
    println "showParams"

    println "BUILD_TYPE : ${BUILD_TYPE}"
    println "PRODUCT_FLAVORS : ${PRODUCT_FLAVORS}"
    println "IS_JENKINS : ${IS_JENKINS}"
    println "APP_VERSION : ${APP_VERSION}"
    println "BUILD_TIME : ${BUILD_TIME}"

}


def getJenkinsVersion() {
    def channels = System.getenv("PRODUCT_FLAVOR_BUILD");
    // String channels="local;dadad;okok"
    channels.toString().tokenize(';').each { channelItem ->
        android.productFlavors.create(channelItem, {
            // 替换渠道号
            manifestPlaceholders = [CHANNEL_NAME: channelItem]
        })
    }
}

def releaseTime() {
    return new Date().time.hashCode()
}

//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

//渠道
def publishTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

}
